openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/auth:
    delete:
      summary: 'Invoke jwt token'
      operationId: invokeJwtToken
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User logged out successfully'
                properties:
                  message:
                    type: string
                    example: 'User logged out successfully'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Get jwt token'
      operationId: getJwtToken
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"email\": \"john@example.com\"\n     \"password\": \"mySecretPassword\"\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tchamplin@example.org
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: hRz3hxx!~(A)m
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/users/me:
    get:
      summary: 'Get my user'
      operationId: getMyUser
      description: 'You can see yourself'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'John Doe'
                  email: john@example.com
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: john@example.com
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      security: []
  /api/users:
    get:
      summary: 'Get a list of users'
      operationId: getAListOfUsers
      description: 'Only users with admin role can use this endpoint'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                  -
                    id: 2
                    name: 'Jane Smith'
                    email: jane@example.com
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 500.'
                  example: 25
                  nullable: false
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 16
                  nullable: false
                name:
                  type: string
                  description: ''
                  example: inventore
                  nullable: true
                email:
                  type: string
                  description: ''
                  example: nienow.edna@example.net
                  nullable: true
      security: []
    post:
      summary: 'Create user'
      operationId: createUser
      description: 'Create new user'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'John Doe'
                  email: john@example.com
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: john@example.com
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fswldsaksm
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: vidal.abbott@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'r77%jws&%'
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  '/api/users/{id}':
    put:
      summary: 'Update user info'
      operationId: updateUserInfo
      description: 'You can see update only yourself if not admin'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'John Doe'
                  email: john@example.com
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: john@example.com
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'optional required The name of the user.'
                  example: id
                  nullable: false
                email:
                  type: string
                  description: 'optional required The email of the user.'
                  example: ureilly@example.org
                  nullable: false
                password:
                  type: string
                  description: 'optional The password of the user.'
                  example: ':c|fJj'
                  nullable: false
                role:
                  type: string
                  description: ''
                  example: client
                  nullable: false
                  enum:
                    - client
                    - admin
      security: []
    delete:
      summary: 'Delete user by id'
      operationId: deleteUserById
      description: 'You can see delete only yourself if not admin'
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/short-links:
    get:
      summary: 'Get list of short links'
      operationId: getListOfShortLinks
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"current_page\" : 1\n\"data\" => [\n   {\n     \"id\": 1,\n     \"link\": \"https://example.com\",\n     \"use_js_redirect\": \"false\",\n     \"user_id\": 1,\n     \"short_link\": https://example.com/a3ew\n   },\n   {\n     \"id\": 2,\n     \"link\": \"https://example.com/2\",\n     \"use_js_redirect\": \"false\"\n     \"user_id\": 22,\n     \"short_link\": https://example.com/b3ew\n   }\n ]\n\"per_page\" : 10,\n\"to\" : 1,\n\"total\" : 1\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 18
                  nullable: true
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 16
                  nullable: true
      security: []
    post:
      summary: 'Create new short link'
      operationId: createNewShortLink
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"id\": 1,\n\"link\": \"https://example.com\",\n\"use_js_redirect\": \"false\",\n\"user_id\": 1,\n\"short_link\": https://example.com/a3ew\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://conn.net/nostrum-a-mollitia-est-optio-veniam-dolor'
                  nullable: false
                use_js_redirect:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - url
      security: []
  '/api/short-links/{id}':
    put:
      summary: '/**'
      operationId: ''
      description: 'Update short link by id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"id\": 1,\n\"link\": \"https://example.com\",\n\"use_js_redirect\": \"false\",\n\"user_id\": 1,\n\"short_link\": https://example.com/a3ew\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Link not found'
                properties:
                  error:
                    type: string
                    example: 'Link not found'
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Create new short link'
      operationId: createNewShortLink
      description: ''
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Link not found'
                properties:
                  error:
                    type: string
                    example: 'Link not found'
      tags:
        - Endpoints
      security: []
    get:
      summary: 'Get short link by id'
      operationId: getShortLinkById
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"id\": 1,\n\"link\": \"https://example.com\",\n\"use_js_redirect\": \"false\",\n\"user_id\": 1,\n\"short_link\": https://example.com/a3ew\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthenticated
                properties:
                  error:
                    type: string
                    example: Unauthenticated
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Link not found'
                properties:
                  error:
                    type: string
                    example: 'Link not found'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the short link.'
        example: occaecati
        required: true
        schema:
          type: string
  '/api/short-links/{id}/additional_info':
    post:
      summary: ''
      operationId: postApiShortLinksIdAdditional_info
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userAgent:
                  type: string
                  description: ''
                  example: molestias
                  nullable: false
                language:
                  type: string
                  description: ''
                  example: culpa
                  nullable: false
                platform:
                  type: string
                  description: ''
                  example: dolor
                  nullable: false
                screenResolution:
                  type: string
                  description: ''
                  example: hic
                  nullable: false
                colorDepth:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
                timezone:
                  type: string
                  description: ''
                  example: Indian/Mayotte
                  nullable: false
                plugins:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                cookiesEnabled:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                hardwareConcurrency:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
                onlineStatus:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                viewportSize:
                  type: string
                  description: ''
                  example: hic
                  nullable: false
                canvasFingerprint:
                  type: string
                  description: ''
                  example: cumque
                  nullable: false
                installedFonts:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                browserName:
                  type: string
                  description: ''
                  example: minima
                  nullable: false
                browserVersion:
                  type: string
                  description: ''
                  example: occaecati
                  nullable: false
                windowSize:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                localStorageAvailable:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                sessionStorageAvailable:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                cssProperties:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - userAgent
                - language
                - platform
                - screenResolution
                - colorDepth
                - timezone
                - plugins
                - cookiesEnabled
                - hardwareConcurrency
                - onlineStatus
                - viewportSize
                - canvasFingerprint
                - installedFonts
                - browserName
                - browserVersion
                - windowSize
                - localStorageAvailable
                - sessionStorageAvailable
                - cssProperties
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the short link.'
        example: non
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
